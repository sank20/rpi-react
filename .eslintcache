[{"C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\index.js":"1","C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\App.js":"2","C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\reportWebVitals.js":"3","C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\DeleteButton.js":"4"},{"size":546,"mtime":1607380303353,"results":"5","hashOfConfig":"6"},{"size":5486,"mtime":1607409543628,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":3167,"mtime":1607409606175,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"z1giy6",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\index.js",[],["21","22"],"C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\App.js",["23"],"import React, { Component } from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nclass App extends Component {\n  state = {\n    fileDropDownList: [],\n    deleteLabel: null,\n    newUpload : false\n  };\n//   TODO: Add progress dialog for upload\n  deleteButtonLabel = \"Select file to delete ->\";\n  // fileList = [];\n  // fileDropDownList = [];\n  baseUrl = \"http://192.168.0.42:8000\";\n  // Play API call\n  playMusic = () => {\n    let url = `${this.baseUrl}/music/play`;\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      // .then((result) => result.json())\n      .then((result) => {\n        // this.setState({\n        //   result: result,\n        // });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  stopMusic = () => {\n    let url = `${this.baseUrl}/music/stop`;\n    // console.log(url);\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      // .then((result) => result.json())\n      .then((result) => {\n        // console.log(result);\n        // this.setState({\n        //   result: result,\n        // });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getAllFiles = () => {\n    let url = `${this.baseUrl}/music/music_files`;\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    });\n  };\n\n  uploadFile = () => {\n    const formData = new FormData();\n    const fileField = document.querySelector('input[type=\"file\"]');\n\n    // formData.append(\"username\", \"abc123\");\n    formData.append(\"file\", fileField.files[0]);\n\n    fetch(`${this.baseUrl}/music/file`, {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(\"Success:\", result);\n        this.setState({\n          newUpload : true\n        });\n        // -----------------re-populating the files -----------------\n      //   this.getAllFiles()\n      //     .then((result) => result.json())\n      //     .then((result) => {\n      //       this.setState({\n      //         fileDropDownList: result,\n      //       });\n      //     })\n      //     .catch((err) => {\n      //       console.log(err);\n      //     });\n      // })\n      // .catch((error) => {\n      //   console.error(\"Error:\", error);\n      });\n  };\n\n  setVolume = () => {\n    var slider = document.getElementById(\"myRange\");\n    let volumeLevel = slider.value / 100;\n    console.log(volumeLevel);\n    // const formData = new FormData();\n    // formData.append(\"volume\", volumeLevel);\n    let url = `${this.baseUrl}/music/volume?volume=${volumeLevel}`;\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      // body: formData,\n    })\n      // .then((result) => result.json())\n      .then((result) => {\n        // console.log(result);\n        // this.setState({\n        //   result: result,\n        // });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  pauseToggle = false; //if true, the audio is paused\n  pauseMusic = () => {\n    let url;\n    if (this.pauseToggle==true) {\n      url = `${this.baseUrl}/music/unpause`;\n    } else {\n      url = `${this.baseUrl}/music/pause`;\n    }\n    // console.log(url);\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    })\n      .then((result) => {\n        this.pauseToggle = !this.pauseToggle;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>MMB Tester</h1>\n        <ol>\n          <li>\n            Music:\n            <button type=\"button\" onClick={this.playMusic}>\n              Play\n            </button>\n            <button type=\"button\" onClick={this.stopMusic}>\n              Stop\n            </button>\n            <button type=\"button\">Pause</button>\n            <br />\n            Volume:\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"100\"\n              // value=\"100\"\n              className=\"slider\"\n              id=\"myRange\"\n              onChange={this.setVolume}\n            />\n          </li>\n          <li>\n            Update Music File:\n            <input\n              type=\"file\"\n              id=\"file_input\"\n              onChange={this.uploadFile}\n            ></input>\n          </li>\n          <li>\n            Delete Music File:\n            <DeleteButton newUpload={this.state.newUpload}/>\n          </li>\n          <li>\n            LED Strip:\n            <input className=\"tgl tgl-light\" id=\"cb1\" type=\"checkbox\" />\n            <label className=\"tgl-btn\"></label>\n          </li>\n          <li>\n            Movement (dance) :\n            <input className=\"tgl tgl-light\" id=\"cb1\" type=\"checkbox\" />\n          </li>\n          <li>\n            Mystery Box (ring):\n            <input className=\"tgl tgl-light\" id=\"cb1\" type=\"checkbox\" />\n          </li>\n          <li>\n            Trigger Spell:\n            <button type=\"button\">Locomotor</button>\n            <button type=\"button\">Arresto Momentum</button>\n            <button type=\"button\">Revelio</button>\n          </li>\n          <li>Camera View</li>\n          {/* Add component here */}\n          <li>Wand movement view:</li>\n          {/* Add component here */}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\reportWebVitals.js",[],"C:\\Users\\Sanket\\rpi-frontend\\rpi-react\\src\\DeleteButton.js",["24","25","26"],"import React, { Component } from \"react\";\r\n// import DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nclass DeleteButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deleteLabel: \"Select file to delete ->\",\r\n      fileDropDownList: [],\r\n      deleteFileName: null,\r\n      newUpload: props.newUpload,\r\n    };\r\n  }\r\n// TODO: Update the dropdown list after file delete success\r\n// TODO: Clear all warnings, use recommended stuff\r\n  baseUrl = \"http://192.168.0.42:8000\";\r\n  getAllFiles = () => {\r\n    let url = `${this.baseUrl}/music/music_files`;\r\n    return fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //   console.log(\"new upload caught in child component\");\r\n    //   console.log(this.props.newUpload);\r\n    //   console.log(prevProps.newUpload);\r\n    if (this.props.newUpload == true && prevProps.newUpload==false ) {\r\n      populateFiles(this);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    populateFiles(this);\r\n  }\r\n\r\n  changeButtonLabel = (fileName) => (e) => {\r\n    console.log(\" trying to delete : \" + fileName);\r\n    this.setState({\r\n      deleteLabel: \"Delete '\" + fileName + \"'\",\r\n      deleteFileName: fileName,\r\n    });\r\n  };\r\n\r\n  deleteFile = () => {\r\n    let url = `${this.baseUrl}/music/file?filename=${this.state.deleteFileName}`;\r\n    // console.log(url);\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n      // .then((result) => result.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          deleteLabel: \"Select file to delete ->\",\r\n        });\r\n        alert(\"File deleted successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"Something went wrong, please select an audio file\");\r\n      });\r\n  };\r\n  render() {\r\n    // console.log(\"in render\");\r\n    const { fileDropDownList } = this.state;\r\n\r\n    return (\r\n      <Dropdown as={ButtonGroup}>\r\n        <Button variant=\"danger\" onClick={this.deleteFile}>\r\n          {this.state.deleteLabel}{\" \"}\r\n        </Button>\r\n\r\n        <Dropdown.Toggle split variant=\"danger\" id=\"dropdown-split-basic\" />\r\n\r\n        <Dropdown.Menu>{this.state.fileDropDownList}</Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\nfunction populateFiles(context) {\r\n  context\r\n    .getAllFiles()\r\n    .then((result) => result.json())\r\n    .then((result) => {\r\n      const dropDownButtons = result.map((fileName, index) => {\r\n        return (\r\n          <Dropdown.Item\r\n            key={index}\r\n            onClick={context.changeButtonLabel(fileName)}\r\n          >\r\n            {fileName}\r\n          </Dropdown.Item>\r\n        );\r\n      });\r\n      context.setState({\r\n        fileDropDownList: dropDownButtons,\r\n        newUpload: false,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport default DeleteButton;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":128,"column":25,"nodeType":"33","messageId":"34","endLine":128,"endColumn":27},{"ruleId":"31","severity":1,"message":"32","line":35,"column":30,"nodeType":"33","messageId":"34","endLine":35,"endColumn":32},{"ruleId":"31","severity":1,"message":"32","line":35,"column":60,"nodeType":"33","messageId":"34","endLine":35,"endColumn":62},{"ruleId":"35","severity":1,"message":"36","line":74,"column":13,"nodeType":"37","messageId":"38","endLine":74,"endColumn":29},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'fileDropDownList' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]